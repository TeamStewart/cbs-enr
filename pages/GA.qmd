---
title: "Georgia"
---

```{r}

source("scripts/util/globals.R")

suppressPackageStartupMessages({
  library(targets)
  library(tidyverse)
  library(gt)
  library(glue)
})

inline_hook <- function(x) {
  if (is.numeric(x)) {
    format(x, digits = 2, nsmall = 0, big.mark = ",")
  } else x
}
knitr::knit_hooks$set(inline = inline_hook)

options(scipen = 999)

# load two data sources, current results and historical modeling data
tar_read(model_GA_NA) |> list2env(envir = .GlobalEnv) |> invisible()
models_full = read_csv(glue("{PATH_DROPBOX}/24_general/GA/GA_NA_modeling.csv"))

```

## How Many Votes Are In?

`r sum(pull(data_history, votes_precTotal_24))` **total** votes are in, `r 100*sum(pull(data_history, votes_precTotal_24)) / sum(pull(data_history, votes_precFinal_20), na.rm=TRUE)`% of the 2020 total

- We estimate the **final total turnout** will be `r summaries$votes_total_24_estimate` with uncertainty bounds [`r summaries$votes_total_24_lower` to `r summaries$votes_total_24_upper`]

`r sum(pull(filter(data_history, vote_mode=="Election Day"), votes_precTotal_24))` **Election Day** votes are in, `r 100*sum(pull(filter(data_history, vote_mode=="Election Day"), votes_precTotal_24)) / sum(pull(filter(data_history, vote_mode=="Election Day"), votes_precFinal_20), na.rm=TRUE)`% of the 2020 total

- We estimate the **final Election Day turnout** will be `r pull(filter(summaries_byMode, vote_mode == "Election Day"), votes_total_24_estimate)` with uncertainty bounds [`r pull(filter(summaries_byMode, vote_mode == "Election Day"), votes_total_24_lower)` to `r pull(filter(summaries_byMode, vote_mode == "Election Day"), votes_total_24_upper)`]

**Precincts reporting all modes**: `r prec_reported_all` out of `r prec_total` total precincts (`r 100*round(prec_reported_all / prec_total, 2)`%)

**Precincts reporting Election Day**: `r prec_reported_eday` out of `r prec_total` total precincts (`r 100*round(prec_reported_eday / prec_total, 2)`%)

## Vote Estimates

**Swing**: `r 100*(summaries$demShare_estimate - summaries$repShare_estimate)`% with uncertainty bounds [`r 100*(summaries$demShare_lower - summaries$repShare_lower)`% to `r 100*(summaries$demShare_upper - summaries$repShare_upper)`%]

**Swing vs 2020**: `r 100*(summaries$swing_estimate)`% with uncertainty bounds [`r 100*(summaries$swing_lower)`% to `r 100*(summaries$swing_upper)`%]

```{r tbl_mode}

summaries_byMode |> 
  mutate(
    across(c(contains("swing")), ~ scales::label_percent(accuracy = 0.01)(.x)),
    swing_24 = glue("{swing_estimate} [{swing_lower} to {swing_upper}]")
  ) |> 
  filter(vote_mode != "Provisional") |> 
  select(vote_mode, swing_24) |> 
  gt() |> 
  tab_style_body(
    style = cell_text(font = "Hack"),
    fn = \(x) TRUE
  ) |>
  cols_align(align = "center") |> 
  cols_label(
    vote_mode = "Vote Mode",
    swing_24 = "Swing vs 2020"
  )

```


**Democrat**: `r summaries$demVotes_estimate` with uncertainty bounds [`r summaries$demVotes_lower` to `r summaries$demVotes_upper`]

**Republican**: `r summaries$repVotes_estimate` with uncertainty bounds [`r summaries$repVotes_lower` to `r summaries$repVotes_upper`]

### Cumulative Plot of Estimated Vote Share (Dem and Rep)

```{r}

models_full |> 
  summarise(
      across(c(contains("swing"), contains("Share")), ~ weighted.mean(.x, votes_total_20, na.rm = TRUE)),
      across(votes_total_20:repVotes_upper, sum),
      .by = c(state, timestamp)
  ) |> 
  mutate(
    across(where(is.double) & !timestamp, ~ na_if(.x, Inf))
  ) |>
  ggplot(aes(x = timestamp)) +
  geom_pointrange(
    aes(y = demShare_estimate, ymin = demShare_lower, ymax = demShare_upper, color = "Dem"), 
    fatten = 1,
    position = position_nudge(x = -100)
  ) +
  geom_pointrange(
    aes(y = repShare_estimate, ymin = repShare_lower, ymax = repShare_upper, color = "Rep"), 
    fatten = 1,
    position = position_nudge(x = 100)
  ) +
  labs(
    x = "Time (EST)",
    y = "Vote Share",
    color = ""
  ) +
  theme_bw() +
  scale_x_datetime(
    labels = scales::label_date(format = "%m-%d \n %I:%M %p", tz = "US/Eastern")
  ) +
  scale_color_manual(values = c("Dem" = "#3791FF", "Rep" = "#F6573E")) +
  geom_hline(yintercept = 0.5, linetype = "dashed")

```

### Cumulative Plot of Swing

```{r}

models_full |>
  summarise(
      across(c(contains("swing"), contains("Share")), ~ weighted.mean(.x, votes_total_20, na.rm = TRUE)),
      across(votes_total_20:repVotes_upper, sum),
      .by = c(state, timestamp)
  ) |> 
  mutate(
    across(where(is.double) & !timestamp, ~ na_if(.x, Inf))
  ) |> 
  ggplot() +
  annotate(
    "rect",
    ymin=0, xmin = as.POSIXct(-Inf, origin = '2014-10-15'), xmax=as.POSIXct(Inf, origin = '2014-10-15'), ymax = Inf,
    fill = "#3791FF", alpha = 0.4, color = NA
  ) +
   annotate(
    "rect",
    ymin=-Inf, xmin = as.POSIXct(-Inf, origin = '2014-10-15'), xmax=as.POSIXct(Inf, origin = '2014-10-15'), ymax = 0,
    fill = "#F6573E", alpha = 0.4, color = NA
  ) +
  geom_pointrange(
    aes(x = timestamp, y = swing_estimate, ymin = swing_lower, ymax = swing_upper), 
    fatten = 1
  ) +
  labs(
    x = "Time (EST)",
    y = "Swing",
  ) +
  theme_bw() +
  scale_x_datetime(
    labels = scales::label_date(format = "%m-%d \n %I:%M %p", tz = "US/Eastern")
  ) +
  geom_hline(yintercept = 0, linetype = "dashed")

```

## Estimated Turnout

### Cumulative Plot of Estimated Election Day Votes

```{r}

models_full |> 
  filter(vote_mode == "Election Day") |> 
  summarize(
    across(starts_with("votes_total_24"), sum),
    .by = c(state, timestamp)
  ) |> 
  mutate(
    across(where(is.double) & !timestamp, ~ na_if(.x, Inf))
  ) |> 
  ggplot() +
  geom_pointrange(
    aes(x = timestamp, y = votes_total_24_estimate, ymin = votes_total_24_lower, ymax = votes_total_24_upper), 
    fatten = 1
  ) +
  labs(
    x = "Time (EST)",
    y = "Projected Election Day Votes",
  ) +
  theme_bw() +
  scale_y_continuous(
    labels = scales::label_comma()
  ) +
  scale_x_datetime(
    labels = scales::label_date(format = "%m-%d \n %I:%M %p", tz = "US/Eastern")
  ) +
  geom_hline(yintercept = 0, linetype = "dashed")

```

### Cumulative Plot of Estimated Total Votes

```{r}

models_full |> 
  summarize(
    across(starts_with("votes_total_24"), sum),
    .by = c(state, timestamp)
  ) |> 
  mutate(
    across(where(is.double) & !timestamp, ~ na_if(.x, Inf))
  ) |> 
  ggplot() +
  geom_pointrange(
    aes(x = timestamp, y = votes_total_24_estimate, ymin = votes_total_24_lower, ymax = votes_total_24_upper), 
    fatten = 1
  ) +
  labs(
    x = "Time (EST)",
    y = "Projected Total Votes",
  ) +
  theme_bw() +
  scale_y_continuous(
    labels = scales::label_comma()
  ) +
  scale_x_datetime(
    labels = scales::label_date(format = "%m-%d \n %I:%M %p", tz = "US/Eastern")
  ) +
  geom_hline(yintercept = 0, linetype = "dashed")

```


## County-level Results by Mode

```{r tbl_county_mode}

summaries_byCounty_byMode |> 
  mutate(
    tmp = swing_estimate,
    county = str_to_title(county),
    across(c(contains("swing"), contains("Share")), ~ scales::label_percent(accuracy = 0.01)(.x)),
    across(votes_total_20:repVotes_upper, ~ round(.x, digits = 0) |> format(big.mark = ",") |> as.character() |> str_squish())
  ) |> 
  mutate(
    votes_total_24 = case_when(
      votes_total_24_estimate == votes_total_24_lower & votes_total_24_estimate == votes_total_24_upper ~  votes_total_24_estimate,
      .default = glue("{votes_total_24_estimate} <br> [{votes_total_24_lower} to {votes_total_24_upper}]")
    ),
    votes_dem_24 = case_when(
      demVotes_estimate == demVotes_lower & demVotes_estimate == demVotes_upper ~  demVotes_estimate,
      .default = glue("{demVotes_estimate} <br> [{demVotes_lower} to {demVotes_upper}]")
    ),
    votes_rep_24 = case_when(
      repVotes_estimate == repVotes_lower & repVotes_estimate == repVotes_upper ~  repVotes_estimate,
      .default = glue("{repVotes_estimate} <br> [{repVotes_lower} to {repVotes_upper}]")
    ),
    swing_24 = case_when(
      is.na(swing_estimate) | vote_mode == "Provisional" ~ NA,
      swing_estimate == swing_lower & swing_estimate == swing_upper ~ swing_estimate,
      .default = glue("{swing_estimate} <br> [{swing_lower} to {swing_upper}]")
    )
  ) |> 
  select(county, vote_mode, timestamp, votes_total_20, votes_total_24:swing_24, tmp) |> 
  gt() |> 
  cols_hide(tmp) |>
  fmt_datetime(columns = timestamp, date_style = "MMMd", time_style = "h_m_s_p") |> 
  sub_missing() |> 
  fmt_markdown(columns = votes_total_24:swing_24) |> 
  data_color(
    columns = tmp,
    target_columns = swing_24,
    palette = c("#F6573E", "white", "#3791FF"),
    domain = c(-0.25, 0.25),
    na_color = "white"
  ) |> 
  cols_width(
    timestamp ~ px(185)
  ) |> 
  tab_style_body(
    columns = timestamp:swing_24,
    style = cell_text(font = "Hack"),
    fn = \(x) TRUE
  ) |>
  cols_align(align = "center", columns = votes_total_20:swing_24) |> 
  cols_label(
    county = "County",
    vote_mode = "Vote Mode",
    timestamp = "Last Reported",
    votes_total_20 = "2020 Votes",
    votes_total_24 = "Votes",
    votes_dem_24 = "Dem Votes",
    votes_rep_24 = "Rep Votes",
    swing_24 = "Swing vs 2020"
  )

```

## County-level Results

```{r tbl_county}

summaries_byCounty |> 
  mutate(
    tmp = swing_estimate,
    county = str_to_title(county),
    across(c(contains("swing"), contains("Share")), ~ scales::label_percent(accuracy = 0.01)(.x)),
    across(votes_total_20:repVotes_upper, ~ round(.x, digits = 0) |> format(big.mark = ",") |> as.character() |> str_squish())
  ) |> 
  mutate(
    votes_total_24 = case_when(
      votes_total_24_estimate == votes_total_24_lower & votes_total_24_estimate == votes_total_24_upper ~  votes_total_24_estimate,
      .default = glue("{votes_total_24_estimate} <br> [{votes_total_24_lower} to {votes_total_24_upper}]")
    ),
    votes_dem_24 = case_when(
      demVotes_estimate == demVotes_lower & demVotes_estimate == demVotes_upper ~  demVotes_estimate,
      .default = glue("{demVotes_estimate} <br> [{demVotes_lower} to {demVotes_upper}]")
    ),
    votes_rep_24 = case_when(
      repVotes_estimate == repVotes_lower & repVotes_estimate == repVotes_upper ~  repVotes_estimate,
      .default = glue("{repVotes_estimate} <br> [{repVotes_lower} to {repVotes_upper}]")
    ),
    swing_24 = case_when(
      is.na(swing_estimate) ~ NA,
      swing_estimate == swing_lower & swing_estimate == swing_upper ~ swing_estimate,
      .default = glue("{swing_estimate} <br> [{swing_lower} to {swing_upper}]")
    )
  ) |> 
  select(county, timestamp, votes_total_20, votes_total_24:swing_24, tmp) |> 
  gt() |> 
  cols_hide(tmp) |>
  fmt_datetime(columns = timestamp, date_style = "MMMd", time_style = "h_m_s_p") |> 
  sub_missing() |>
  fmt_markdown(columns = votes_total_24:swing_24) |> 
  data_color(
    columns = tmp,
    target_columns = swing_24,
    palette = c("#F6573E", "white", "#3791FF"),
    domain = c(-0.25, 0.25),
    na_color = "white"
  ) |> 
  cols_width(
    timestamp ~ px(185)
  ) |> 
  tab_style_body(
    columns = timestamp:swing_24,
    style = cell_text(font = "Hack"),
    fn = \(x) TRUE
  ) |>
  cols_align(align = "center", columns = votes_total_20:swing_24) |> 
  cols_label(
    county = "County",
    timestamp = "Last Reported",
    votes_total_20 = "2020 Votes",
    votes_total_24 = "Votes",
    votes_dem_24 = "Dem Votes",
    votes_rep_24 = "Rep Votes",
    swing_24 = "Swing vs 2020"
  )

```


